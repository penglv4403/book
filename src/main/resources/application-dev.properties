spring.profiles=dev

spiderBookUrl = https://www.xbikuge.com
bookPath=C:\\Users\\ME\\Desktop\\
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.username = root
spring.datasource.url = jdbc:mysql://182.254.230.44:3306/orange_book?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=UTF-8
spring.datasource.password = Peng78968
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# 初始化连接池个数
spring.datasource.initialSize= 5
# 最大连接池个数
spring.datasource.maxActive= 20
# 配置获取连接等待超时的时间，单位毫秒，缺省启用公平锁，并发效率会有所下降
spring.datasource.maxWait= 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis= 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis= 300000
# 用来检测连接是否有效的sql，要求是一个查询语句。
# 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用
spring.datasource.validationQuery= SELECT 1 FROM DUAL
# 建议配置为true，不影响性能，并且保证安全性。
# 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.testWhileIdle= true
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.testOnBorrow= false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
testOnReturn= false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements= true
spring.datasource.maxPoolPreparedStatementPerConnectionSize= 20
# 通过别名的方式配置扩展插件，多个英文逗号分隔，常用的插件有：
# 监控统计用的filter=stat
# 日志用的filter=log4j
# 防御sql注入的filter=wall
spring.datasource.filters= stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties= druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat= true

